{"version":3,"sources":["components/Header.js","components/SearchBar.js","components/Footer.js","assets/no_img.jpg","components/Random.js","App.js","index.js"],"names":["Header","_jsx","_Fragment","children","_jsxs","className","SearchBar","props","_useState","useState","_useState2","_slicedToArray","SearchedRecipe","setSearchRecipe","_useState3","_useState4","searchedInput","setSearchInput","_useState5","_useState6","viewing","setViewing","handleFormSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","event","response","recipes","_recipe","recipeData","wrap","_context","prev","next","preventDefault","abrupt","fetch","concat","sent","ok","Error","json","recipe","results","map","title","image","summary","dishTypes","servings","analyzedInstructions","ingredients","extendedIngredients","t0","console","error","stop","_x","apply","arguments","_useState7","_useState8","show","setShow","handleClose","_useState9","_useState10","setRecipe","_useState11","_useState12","recipeSteps","setRecipeSteps","_useState13","_useState14","recipeIngredients","setRecipeIngredients","_useState15","_useState16","info","setInfo","showRecipeSteps","postRecipe","postRecipeSteps","steps","postRecipeIngredients","Jumbotron","fluid","Container","Form","onSubmit","Row","Col","xs","md","Control","name","value","onChange","e","target","type","size","placeholder","Button","variant","length","CardGroup","lg","Card","style","width","Img","src","alt","Body","Title","Text","ListGroup","Item","onClick","Modal","_objectSpread","onHide","centered","closeButton","id","Nav","defaultActiveKey","Link","eventKey","href","step","measures","us","amount","unitShort","Footer","rel","RandomRecipes","randomRecipes","setRandomRecipes","getRandom","useEffect","noImg","App","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f0c14ef9.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Header = () => {\r\n    return (\r\n        <>\r\n            <header>\r\n                <h1 className=\"header\">\r\n                    Foodies<span>Recipe Database</span>\r\n                </h1>\r\n            </header>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Header;","import React, { useState } from \"react\";\r\nimport { Jumbotron, Container, Col, Form, Button, Card, ListGroup, CardGroup, Modal, Row, Nav } from 'react-bootstrap';\r\n\r\nconst SearchBar = (props) => {\r\n    const [SearchedRecipe, setSearchRecipe] = useState([]);\r\n    const [searchedInput, setSearchInput] = useState('');\r\n    const [viewing, setViewing] = useState('')\r\n\r\n    const handleFormSubmit = async (event) => {\r\n        event.preventDefault();\r\n        setViewing(searchedInput)\r\n\r\n        if (!searchedInput) {\r\n            return false;\r\n        }\r\n        \r\n        try {\r\n            const response = await fetch(`https://api.spoonacular.com/recipes/complexSearch?apiKey=f45007eefd874c71bd0a103aa764db2d&query=${searchedInput}&number=20&addRecipeInformation=true&fillIngredients=true`)\r\n\r\n            if (!response.ok) {\r\n                throw new Error('something went wrong!');\r\n            }\r\n\r\n            const recipes = await response.json();\r\n            const recipe = recipes.results;\r\n\r\n            const recipeData = recipe.map((recipe) => ({\r\n                title: recipe.title,\r\n                image: recipe.image,\r\n                summary: recipe.summary,\r\n                dishTypes: recipe.dishTypes,\r\n                servings: recipe.servings,\r\n                analyzedInstructions: recipe.analyzedInstructions,\r\n                ingredients: recipe.extendedIngredients\r\n            }))\r\n\r\n            setSearchRecipe(recipeData)\r\n            setSearchInput('');\r\n\r\n        } catch (err) {\r\n            console.error(err);\r\n        }\r\n    }\r\n\r\n    //handles detail model\r\n    const [show, setShow] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    const [recipe, setRecipe] = useState([])\r\n    const [recipeSteps, setRecipeSteps] = useState([])\r\n    const [recipeIngredients, setRecipeIngredients] = useState([])\r\n    const [info, setInfo] = useState('steps')\r\n\r\n    const showRecipeSteps = (recipe) => {\r\n        const postRecipe = recipe\r\n        const postRecipeSteps = postRecipe.analyzedInstructions[0].steps;\r\n        const postRecipeIngredients = postRecipe.ingredients\r\n\r\n        setRecipe(postRecipe)\r\n        setRecipeSteps(postRecipeSteps)\r\n        setRecipeIngredients(postRecipeIngredients)\r\n\r\n        handleShow()\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Jumbotron fluid className='text-light'>\r\n                <Container>\r\n                    <Form onSubmit={handleFormSubmit}>\r\n                        <Form.Row>\r\n                            <Col xs={12} md={8}>\r\n                                <Form.Control\r\n                                    name='searchInput'\r\n                                    value={searchedInput}\r\n                                    onChange={(e) => setSearchInput(e.target.value)}\r\n                                    type='text'\r\n                                    size='lg'\r\n                                    placeholder='Search for a recipe'\r\n                                />\r\n                            </Col>\r\n                            <Col xs={12} md={3}>\r\n                                <Button className='btn-2' type='submit' variant=\"success\" size='lg'>\r\n                                    Submit Search\r\n                                </Button>\r\n                            </Col>\r\n                        </Form.Row>\r\n                    </Form>\r\n                </Container>\r\n            </Jumbotron>\r\n\r\n            <Container>\r\n                <h2 className='viewing'>\r\n                    {SearchedRecipe.length\r\n                        ? `${SearchedRecipe.length} results for ${viewing}:`\r\n                        : ''}\r\n                </h2>\r\n                <CardGroup lg={8}>\r\n                <Row lg={'auto'} className=\"g-4\">\r\n                    {SearchedRecipe.map((recipe) => (\r\n                        <Card style={{ width: '18rem' }}>\r\n                            <Card.Img variant=\"top\" src={recipe.image} alt={`${recipe.title}`} />\r\n                            <Card.Body>\r\n                                <Card.Title>{recipe.title}</Card.Title>\r\n                                <Card.Text></Card.Text>\r\n                            </Card.Body>\r\n                            <ListGroup className=\"list-group-flush\">\r\n                                <ListGroup.Item>Dish type- {recipe.dishTypes}</ListGroup.Item>\r\n                                <ListGroup.Item>{recipe.servings} servings</ListGroup.Item>\r\n                            </ListGroup>\r\n                            <Button className='btn-2' type='submit' variant=\"success\" size='lg' onClick={() => showRecipeSteps(recipe)}>\r\n                                Crafting Instructions\r\n                            </Button>\r\n                        </Card>\r\n                    ))}\r\n                    </Row>\r\n                </CardGroup>\r\n            </Container>\r\n            <Modal\r\n                show={show} onHide={handleClose}\r\n                {...props}\r\n                size=\"lg\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                        {recipe.title}\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <h4>\r\n                        Summary\r\n                    </h4>\r\n                    <div>{recipe.summary}</div>\r\n                    <Nav variant=\"tabs\" defaultActiveKey=\"link-1\">\r\n                        <Nav.Item>\r\n                            <Nav.Link eventKey=\"link-1\" onClick={() => { setInfo('steps') }}>Steps</Nav.Link>\r\n                        </Nav.Item>\r\n                        <Nav.Item>\r\n                            <Nav.Link href=\"#disabled\" onClick={() => { setInfo('ingredients') }}>Ingredients</Nav.Link>\r\n                        </Nav.Item>\r\n                    </Nav>\r\n                    {info === 'steps' ?\r\n                        <div>\r\n                            {recipeSteps.map((recipeSteps) => (\r\n                                <li type=\"1\" key={recipeSteps.step}>{recipeSteps.step}</li>\r\n                            ))}\r\n                        </div>\r\n                        :\r\n                        <div>\r\n                            {recipeIngredients.map((recipeIngredients) => (\r\n                                <li>{recipeIngredients.measures.us.amount} {recipeIngredients.measures.us.unitShort} {recipeIngredients.name}</li>\r\n                            ))}\r\n                        </div>\r\n                    }\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button onClick={handleClose}>Close</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SearchBar","import React from 'react';\r\n\r\nfunction Footer () {\r\n    return (\r\n        <footer>\r\n            <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.4.0/css/font-awesome.min.css\"></link>\r\n            <ul className='flex-row'>\r\n                <li>\r\n                    <a href='https://github.com/chazgraham'><i className=\"fa fa-github fa-4x\"></i></a>\r\n                </li>\r\n                <li>\r\n                    <a href='https://www.linkedin.com/in/chaz-graham-a95a43258'><i className=\"fa fa-linkedin-square fa-4x\"></i></a>\r\n                </li>\r\n                <li>\r\n                    <a href='https://stackoverflow.com/users/19429367/chaz-graham'><i className=\"fa fa-stack-overflow fa-4x\"></i></a>\r\n                </li>\r\n            </ul>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer;","export default __webpack_public_path__ + \"static/media/no_img.2efe78cd.jpg\";","import React, { useState, useEffect } from \"react\";\r\nimport { Container, Button, Card, ListGroup, CardGroup, Modal, Row, Nav } from 'react-bootstrap';\r\nimport noImg from \"../assets/no_img.jpg\";\r\n\r\nconst RandomRecipes = (props) => {\r\n\r\n    const [randomRecipes, setRandomRecipes] = useState([])\r\n\r\n    const getRandom = async (e) => {\r\n        const response = await fetch(`https://api.spoonacular.com/recipes/random?apiKey=f45007eefd874c71bd0a103aa764db2d&&number=4&addRecipeInformation=true`)\r\n\r\n        if (!response.ok) {\r\n            throw new Error('something went wrong!');\r\n        }\r\n\r\n        const recipes = await response.json();\r\n        const recipe = recipes.recipes;\r\n\r\n        const recipeData = recipe.map((recipe) => ({\r\n            title: recipe.title,\r\n            image: recipe.image,\r\n            summary: recipe.summary,\r\n            dishTypes: recipe.dishTypes,\r\n            servings: recipe.servings,\r\n            analyzedInstructions: recipe.analyzedInstructions,\r\n            ingredients: recipe.extendedIngredients\r\n        }))\r\n\r\n        setRandomRecipes(recipeData);\r\n    }\r\n\r\n    useEffect(() => {\r\n        getRandom()\r\n    }, [])\r\n\r\n    //handles detail model\r\n    const [show, setShow] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    const [recipe, setRecipe] = useState([])\r\n    const [recipeSteps, setRecipeSteps] = useState([])\r\n    const [recipeIngredients, setRecipeIngredients] = useState([])\r\n    const [info, setInfo] = useState('steps')\r\n\r\n\r\n    const showRecipeSteps = (recipe) => {\r\n        const postRecipe = recipe\r\n        const postRecipeSteps = postRecipe.analyzedInstructions[0].steps;\r\n        const postRecipeIngredients = postRecipe.ingredients\r\n\r\n        setRecipe(postRecipe)\r\n        setRecipeSteps(postRecipeSteps)\r\n        setRecipeIngredients(postRecipeIngredients)\r\n\r\n        handleShow()\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Container>\r\n                <h2 className='random_h2'>\r\n                    Need some Ideas?\r\n                </h2>\r\n                <CardGroup lg={8}>\r\n                    <Row lg={'auto'} className=\"g-4\">\r\n                        {randomRecipes.map((recipe) => (\r\n                            <Card style={{ width: '16rem' }}>\r\n                                {!recipe.image ?\r\n                                    <Card.Img variant=\"top\" src={noImg} alt={`${recipe.title}`} />\r\n                                    :\r\n                                    <Card.Img variant=\"top\" src={recipe.image} alt={`${recipe.title}`} />\r\n                                }\r\n                                <Card.Body>\r\n                                    <Card.Title>{recipe.title}</Card.Title>\r\n                                    <Card.Text></Card.Text>\r\n                                </Card.Body>\r\n                                <ListGroup className=\"list-group-flush\">\r\n                                    <ListGroup.Item>Dish type- {recipe.dishTypes}</ListGroup.Item>\r\n                                    <ListGroup.Item>{recipe.servings} servings</ListGroup.Item>\r\n                                </ListGroup>\r\n                                <Button className='btn-2' type='submit' variant=\"success\" size='lg' onClick={() => showRecipeSteps(recipe)}>\r\n                                    Crafting Instructions\r\n                                </Button>\r\n                            </Card>\r\n                        ))}\r\n                    </Row>\r\n                </CardGroup>\r\n            </Container>\r\n            <div className=\"random_btn\"><Button onClick={() => getRandom()}>Randomize</Button></div>\r\n            <Modal\r\n                show={show} onHide={handleClose}\r\n                {...props}\r\n                size=\"lg\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                        {recipe.title}\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <h4>\r\n                        Summary\r\n                    </h4>\r\n                    <div>{recipe.summary}</div>\r\n                    <Nav variant=\"tabs\" defaultActiveKey=\"link-1\">\r\n                        <Nav.Item>\r\n                            <Nav.Link eventKey=\"link-1\" onClick={() => { setInfo('steps') }}>Steps</Nav.Link>\r\n                        </Nav.Item>\r\n                        <Nav.Item>\r\n                            <Nav.Link href=\"#disabled\" onClick={() => { setInfo('ingredients') }}>Ingredients</Nav.Link>\r\n                        </Nav.Item>\r\n                    </Nav>\r\n                    {info === 'steps' ?\r\n                        <div>\r\n                            {recipeSteps.map((recipeSteps) => (\r\n                                <li type=\"1\" key={recipeSteps.step}>{recipeSteps.step}</li>\r\n                            ))}\r\n                        </div>\r\n                        :\r\n                        <div>\r\n                            {recipeIngredients.map((recipeIngredients) => (\r\n                                <li>{recipeIngredients.measures.us.amount} {recipeIngredients.measures.us.unitShort} {recipeIngredients.name}</li>\r\n                            ))}\r\n                        </div>\r\n                    }\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button onClick={handleClose}>Close</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default RandomRecipes;","import React from 'react';\nimport './App.css';\n\nimport Header from './components/Header';\nimport SearchBar from './components/SearchBar';\nimport Footer from './components/Footer';\nimport RandomRecipes from './components/Random';\n\nfunction App() {\n  return (\n    <>\n      <Header />\n      <SearchBar />\n      <RandomRecipes />\n      <Footer />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}