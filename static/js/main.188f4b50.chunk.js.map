{"version":3,"sources":["components/Header.js","components/SearchBar.js","components/Footer.js","components/Random.js","App.js","index.js"],"names":["Header","_jsx","_Fragment","children","_jsxs","className","SearchBar","props","_useState","useState","_useState2","_slicedToArray","SearchedRecipe","setSearchRecipe","_useState3","_useState4","searchedInput","setSearchInput","handleFormSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","event","response","recipes","_recipe","recipeData","wrap","_context","prev","next","preventDefault","abrupt","fetch","concat","sent","console","log","ok","Error","json","recipe","results","map","title","image","summary","dishTypes","servings","analyzedInstructions","ingredients","extendedIngredients","t0","error","stop","_x","apply","arguments","_useState5","_useState6","show","setShow","handleClose","_useState7","_useState8","setRecipe","_useState9","_useState10","recipeSteps","setRecipeSteps","_useState11","_useState12","recipeIngredients","setRecipeIngredients","_useState13","_useState14","info","setInfo","showRecipeSteps","postRecipe","postRecipeSteps","steps","postRecipeIngredients","Jumbotron","fluid","Container","Form","onSubmit","Row","Col","xs","md","Control","name","value","onChange","e","target","type","size","placeholder","Button","variant","length","CardGroup","lg","Card","style","width","Img","src","alt","Body","Title","Text","ListGroup","Item","onClick","Modal","_objectSpread","onHide","centered","closeButton","id","Nav","defaultActiveKey","Link","eventKey","href","step","measures","us","amount","unitShort","Footer","rel","RandomRecipes","randomRecipes","setRandomRecipes","getRandom","useEffect","App","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.188f4b50.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Header = () => {\r\n    return (\r\n        <>\r\n            <header>\r\n                <h1 className=\"header\">\r\n                    Foodies<span>Recipe Database</span>\r\n                </h1>\r\n            </header>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Header;","import React, { useState } from \"react\";\r\nimport { Jumbotron, Container, Col, Form, Button, Card, ListGroup, CardGroup, Modal, Row, Nav } from 'react-bootstrap';\r\n\r\nconst SearchBar = (props) => {\r\n    const [SearchedRecipe, setSearchRecipe] = useState([]);\r\n    const [searchedInput, setSearchInput] = useState('');\r\n\r\n    const handleFormSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        if (!searchedInput) {\r\n            return false;\r\n        }\r\n        \r\n        try {\r\n            const response = await fetch(`https://api.spoonacular.com/recipes/complexSearch?apiKey=f45007eefd874c71bd0a103aa764db2d&query=${searchedInput}&number=20&addRecipeInformation=true&fillIngredients=true`)\r\n            console.log(response)\r\n\r\n            if (!response.ok) {\r\n                throw new Error('something went wrong!');\r\n            }\r\n\r\n            const recipes = await response.json();\r\n            const recipe = recipes.results;\r\n            console.log(recipe)\r\n\r\n            const recipeData = recipe.map((recipe) => ({\r\n                title: recipe.title,\r\n                image: recipe.image,\r\n                summary: recipe.summary,\r\n                dishTypes: recipe.dishTypes,\r\n                servings: recipe.servings,\r\n                analyzedInstructions: recipe.analyzedInstructions,\r\n                ingredients: recipe.extendedIngredients\r\n            }))\r\n\r\n            setSearchRecipe(recipeData)\r\n            setSearchInput('');\r\n\r\n        } catch (err) {\r\n            console.error(err);\r\n        }\r\n    }\r\n\r\n    //handles detail model\r\n    const [show, setShow] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    const [recipe, setRecipe] = useState([])\r\n    const [recipeSteps, setRecipeSteps] = useState([])\r\n    const [recipeIngredients, setRecipeIngredients] = useState([])\r\n    const [info, setInfo] = useState('steps')\r\n\r\n    const showRecipeSteps = (recipe) => {\r\n        const postRecipe = recipe\r\n        console.log(postRecipe)\r\n        const postRecipeSteps = postRecipe.analyzedInstructions[0].steps;\r\n        const postRecipeIngredients = postRecipe.ingredients\r\n        console.log(postRecipeIngredients)\r\n\r\n        setRecipe(postRecipe)\r\n        setRecipeSteps(postRecipeSteps)\r\n        setRecipeIngredients(postRecipeIngredients)\r\n\r\n        handleShow()\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Jumbotron fluid className='text-light'>\r\n                <Container>\r\n                    <Form onSubmit={handleFormSubmit}>\r\n                        <Form.Row>\r\n                            <Col xs={12} md={8}>\r\n                                <Form.Control\r\n                                    name='searchInput'\r\n                                    value={searchedInput}\r\n                                    onChange={(e) => setSearchInput(e.target.value)}\r\n                                    type='text'\r\n                                    size='lg'\r\n                                    placeholder='Search for a recipe'\r\n                                />\r\n                            </Col>\r\n                            <Col xs={12} md={3}>\r\n                                <Button className='btn-2' type='submit' variant=\"success\" size='lg'>\r\n                                    Submit Search\r\n                                </Button>\r\n                            </Col>\r\n                        </Form.Row>\r\n                    </Form>\r\n                </Container>\r\n            </Jumbotron>\r\n\r\n            <Container>\r\n                <h2 className='viewing'>\r\n                    {SearchedRecipe.length\r\n                        ? `Viewing ${SearchedRecipe.length} results:`\r\n                        : ''}\r\n                </h2>\r\n                <CardGroup lg={8}>\r\n                <Row lg={'auto'} className=\"g-4\">\r\n                    {SearchedRecipe.map((recipe) => (\r\n                        <Card style={{ width: '18rem' }}>\r\n                            <Card.Img variant=\"top\" src={recipe.image} alt={`${recipe.title}`} />\r\n                            <Card.Body>\r\n                                <Card.Title>{recipe.title}</Card.Title>\r\n                                <Card.Text></Card.Text>\r\n                            </Card.Body>\r\n                            <ListGroup className=\"list-group-flush\">\r\n                                <ListGroup.Item>Dish type- {recipe.dishTypes}</ListGroup.Item>\r\n                                <ListGroup.Item>{recipe.servings} servings</ListGroup.Item>\r\n                            </ListGroup>\r\n                            <Button className='btn-2' type='submit' variant=\"success\" size='lg' onClick={() => showRecipeSteps(recipe)}>\r\n                                Crafting Instructions\r\n                            </Button>\r\n                        </Card>\r\n                    ))}\r\n                    </Row>\r\n                </CardGroup>\r\n            </Container>\r\n            <Modal\r\n                show={show} onHide={handleClose}\r\n                {...props}\r\n                size=\"lg\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                        {recipe.title}\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <h4>\r\n                        Summary\r\n                    </h4>\r\n                    <div>{recipe.summary}</div>\r\n                    <Nav variant=\"tabs\" defaultActiveKey=\"link-1\">\r\n                        <Nav.Item>\r\n                            <Nav.Link eventKey=\"link-1\" onClick={() => { setInfo('steps') }}>Steps</Nav.Link>\r\n                        </Nav.Item>\r\n                        <Nav.Item>\r\n                            <Nav.Link href=\"#disabled\" onClick={() => { setInfo('ingredients') }}>Ingredients</Nav.Link>\r\n                        </Nav.Item>\r\n                    </Nav>\r\n                    {info === 'steps' ?\r\n                        <div>\r\n                            {recipeSteps.map((recipeSteps) => (\r\n                                <li type=\"1\" key={recipeSteps.step}>{recipeSteps.step}</li>\r\n                            ))}\r\n                        </div>\r\n                        :\r\n                        <div>\r\n                            {recipeIngredients.map((recipeIngredients) => (\r\n                                <li>{recipeIngredients.measures.us.amount} {recipeIngredients.measures.us.unitShort} {recipeIngredients.name}</li>\r\n                            ))}\r\n                        </div>\r\n                    }\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button onClick={handleClose}>Close</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SearchBar","import React from 'react';\r\n\r\nfunction Footer () {\r\n    return (\r\n        <footer>\r\n            <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.4.0/css/font-awesome.min.css\"></link>\r\n            <ul className='flex-row'>\r\n                <li>\r\n                    <a href='https://github.com/chazgraham'><i className=\"fa fa-github fa-4x\"></i></a>\r\n                </li>\r\n                <li>\r\n                    <a href='https://www.linkedin.com/in/chaz-graham-a95a43258'><i className=\"fa fa-linkedin-square fa-4x\"></i></a>\r\n                </li>\r\n                <li>\r\n                    <a href='https://stackoverflow.com/users/19429367/chaz-graham'><i className=\"fa fa-stack-overflow fa-4x\"></i></a>\r\n                </li>\r\n            </ul>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React, { useState, useEffect } from \"react\";\r\nimport { Container, Button, Card, ListGroup, CardGroup, Modal, Row, Nav } from 'react-bootstrap';\r\n\r\nconst RandomRecipes = (props) => {\r\n\r\n    const [randomRecipes, setRandomRecipes] = useState([])\r\n\r\n    const getRandom = async (e) => {\r\n        const response = await fetch(`https://api.spoonacular.com/recipes/random?apiKey=f45007eefd874c71bd0a103aa764db2d&&number=4&addRecipeInformation=true`)\r\n\r\n        if (!response.ok) {\r\n            throw new Error('something went wrong!');\r\n        }\r\n\r\n        const recipes = await response.json();\r\n        const recipe = recipes.recipes;\r\n\r\n        const recipeData = recipe.map((recipe) => ({\r\n            title: recipe.title,\r\n            image: recipe.image,\r\n            summary: recipe.summary,\r\n            dishTypes: recipe.dishTypes,\r\n            servings: recipe.servings,\r\n            analyzedInstructions: recipe.analyzedInstructions,\r\n            ingredients: recipe.extendedIngredients\r\n        }))\r\n\r\n        setRandomRecipes(recipeData);\r\n    }\r\n\r\n    useEffect(() => {\r\n        getRandom()\r\n    }, [])\r\n\r\n    //handles detail model\r\n    const [show, setShow] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    const [recipe, setRecipe] = useState([])\r\n    const [recipeSteps, setRecipeSteps] = useState([])\r\n    const [recipeIngredients, setRecipeIngredients] = useState([])\r\n    const [info, setInfo] = useState('steps')\r\n\r\n\r\n    const showRecipeSteps = (recipe) => {\r\n        const postRecipe = recipe\r\n        const postRecipeSteps = postRecipe.analyzedInstructions[0].steps;\r\n        const postRecipeIngredients = postRecipe.ingredients\r\n\r\n        setRecipe(postRecipe)\r\n        setRecipeSteps(postRecipeSteps)\r\n        setRecipeIngredients(postRecipeIngredients)\r\n\r\n        handleShow()\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Container>\r\n                <h2 className='random_h2'>\r\n                    Need some Ideas?\r\n                </h2>\r\n                <CardGroup lg={8}>\r\n                    <Row lg={'auto'} className=\"g-4\">\r\n                        {randomRecipes.map((recipe) => (\r\n                            <Card style={{ width: '16rem' }}>\r\n                                <Card.Img variant=\"top\" src={recipe.image} alt={`${recipe.title}`} />\r\n                                <Card.Body>\r\n                                    <Card.Title>{recipe.title}</Card.Title>\r\n                                    <Card.Text></Card.Text>\r\n                                </Card.Body>\r\n                                <ListGroup className=\"list-group-flush\">\r\n                                    <ListGroup.Item>Dish type- {recipe.dishTypes}</ListGroup.Item>\r\n                                    <ListGroup.Item>{recipe.servings} servings</ListGroup.Item>\r\n                                </ListGroup>\r\n                                <Button className='btn-2' type='submit' variant=\"success\" size='lg' onClick={() => showRecipeSteps(recipe)}>\r\n                                    Crafting Instructions\r\n                                </Button>\r\n                            </Card>\r\n                        ))}\r\n                    </Row>\r\n                </CardGroup>\r\n            </Container>\r\n            <div className=\"random_btn\"><Button onClick={() => getRandom()}>Randomize</Button></div>\r\n            <Modal\r\n                show={show} onHide={handleClose}\r\n                {...props}\r\n                size=\"lg\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                        {recipe.title}\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <h4>\r\n                        Summary\r\n                    </h4>\r\n                    <div>{recipe.summary}</div>\r\n                    <Nav variant=\"tabs\" defaultActiveKey=\"link-1\">\r\n                        <Nav.Item>\r\n                            <Nav.Link eventKey=\"link-1\" onClick={() => { setInfo('steps') }}>Steps</Nav.Link>\r\n                        </Nav.Item>\r\n                        <Nav.Item>\r\n                            <Nav.Link href=\"#disabled\" onClick={() => { setInfo('ingredients') }}>Ingredients</Nav.Link>\r\n                        </Nav.Item>\r\n                    </Nav>\r\n                    {info === 'steps' ?\r\n                        <div>\r\n                            {recipeSteps.map((recipeSteps) => (\r\n                                <li type=\"1\" key={recipeSteps.step}>{recipeSteps.step}</li>\r\n                            ))}\r\n                        </div>\r\n                        :\r\n                        <div>\r\n                            {recipeIngredients.map((recipeIngredients) => (\r\n                                <li>{recipeIngredients.measures.us.amount} {recipeIngredients.measures.us.unitShort} {recipeIngredients.name}</li>\r\n                            ))}\r\n                        </div>\r\n                    }\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button onClick={handleClose}>Close</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default RandomRecipes;","import React from 'react';\nimport './App.css';\n\nimport Header from './components/Header';\nimport SearchBar from './components/SearchBar';\nimport Footer from './components/Footer';\nimport RandomRecipes from './components/Random';\n\nfunction App() {\n  return (\n    <>\n      <Header />\n      <SearchBar />\n      <RandomRecipes />\n      <Footer />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}