{"version":3,"sources":["components/Header.js","components/SearchBar.js","components/Footer.js","components/Random.js","App.js","index.js"],"names":["Header","_jsx","_Fragment","children","_jsxs","className","SearchBar","props","_useState","useState","_useState2","_slicedToArray","SearchedRecipe","setSearchRecipe","_useState3","_useState4","searchedInput","setSearchInput","handleFormSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","event","response","recipes","_recipe","recipeData","wrap","_context","prev","next","preventDefault","abrupt","fetch","concat","sent","console","log","ok","Error","json","recipe","results","map","title","image","summary","dishTypes","servings","analyzedInstructions","t0","error","stop","_x","apply","arguments","_useState5","_useState6","show","setShow","handleClose","_useState7","_useState8","setRecipe","_useState9","_useState10","recipeSteps","setRecipeSteps","showRecipeSteps","postRecipe","postRecipeSteps","steps","Jumbotron","fluid","Container","Form","onSubmit","Row","Col","xs","md","Control","name","value","onChange","e","target","type","size","placeholder","Button","variant","length","CardGroup","lg","Card","style","width","Img","src","alt","Body","Title","Text","ListGroup","Item","onClick","Modal","_objectSpread","onHide","centered","closeButton","id","step","Footer","rel","href","RandomRecipes","randomRecipes","setRandomRecipes","getRandom","useEffect","App","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"oNAceA,EAZA,WACX,OACIC,cAAAC,WAAA,CAAAC,SACIF,cAAA,UAAAE,SACIC,eAAA,MAAIC,UAAU,SAAQF,SAAA,CAAC,UACZF,cAAA,QAAAE,SAAM,0BAKjC,E,+GCuIeG,EAhJG,SAACC,GACf,IAAAC,EAA0CC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAA/CI,EAAcF,EAAA,GAAEG,EAAeH,EAAA,GACtCI,EAAwCL,mBAAS,IAAGM,EAAAJ,YAAAG,EAAA,GAA7CE,EAAaD,EAAA,GAAEE,EAAcF,EAAA,GAE9BG,EAAgB,eAAAC,EAAAC,YAAAC,cAAAC,MAAG,SAAAC,EAAOC,GAAK,IAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAP,cAAAQ,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACV,GAAvBR,EAAMS,iBAEDjB,EAAc,CAADc,EAAAE,KAAA,eAAAF,EAAAI,OAAA,UACP,GAAK,cAAAJ,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAIWG,MAAM,mGAADC,OAAoGpB,EAAa,yCAAuC,OAC/J,GADfS,EAAQK,EAAAO,KACdC,QAAQC,IAAId,GAEPA,EAASe,GAAG,CAADV,EAAAE,KAAA,eACN,IAAIS,MAAM,yBAAyB,KAAD,UAAAX,EAAAE,KAAA,GAGtBP,EAASiB,OAAO,KAAD,GAA/BhB,EAAOI,EAAAO,KACbC,QAAQC,IAAIb,GACNiB,EAASjB,EAAQkB,QAEjBhB,EAAae,EAAOE,KAAI,SAACF,GAAM,MAAM,CACvCG,MAAOH,EAAOG,MACdC,MAAOJ,EAAOI,MACdC,QAASL,EAAOK,QAChBC,UAAWN,EAAOM,UAClBC,SAAUP,EAAOO,SACjBC,qBAAsBR,EAAOQ,qBAChC,IAEDtC,EAAgBe,GAChBX,EAAe,IAAIa,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAsB,GAAAtB,EAAA,SAGnBQ,QAAQe,MAAKvB,EAAAsB,IAAM,yBAAAtB,EAAAwB,OAAA,GAAA/B,EAAA,mBAE1B,gBAlCqBgC,GAAA,OAAApC,EAAAqC,MAAA,KAAAC,UAAA,KAqCtBC,EAAwBjD,oBAAS,GAAMkD,EAAAhD,YAAA+C,EAAA,GAAhCE,EAAID,EAAA,GAAEE,EAAOF,EAAA,GACdG,EAAc,WAAH,OAASD,GAAQ,EAAO,EAGzCE,EAA4BtD,mBAAS,IAAGuD,EAAArD,YAAAoD,EAAA,GAAjCpB,EAAMqB,EAAA,GAAEC,EAASD,EAAA,GACxBE,EAAsCzD,mBAAS,IAAG0D,EAAAxD,YAAAuD,EAAA,GAA3CE,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAE5BG,EAAkB,SAAC3B,GACrBL,QAAQC,IAAII,GACZ,IAAM4B,EAAa5B,EACnBL,QAAQC,IAAIgC,GACZ,IAAMC,EAAkBD,EAAWpB,qBAAqB,GAAGsB,MAC3DnC,QAAQC,IAAIiC,GAEZP,EAAUM,GACVF,EAAeG,GAbMX,GAAQ,EAgBjC,EAEA,OACIzD,eAAAF,WAAA,CAAAC,SAAA,CACIF,cAACyE,IAAS,CAACC,OAAK,EAACtE,UAAU,aAAYF,SACnCF,cAAC2E,IAAS,CAAAzE,SACNF,cAAC4E,IAAI,CAACC,SAAU5D,EAAiBf,SAC7BC,eAACyE,IAAKE,IAAG,CAAA5E,SAAA,CACLF,cAAC+E,IAAG,CAACC,GAAI,GAAIC,GAAI,EAAE/E,SACfF,cAAC4E,IAAKM,QAAO,CACTC,KAAK,cACLC,MAAOrE,EACPsE,SAAU,SAACC,GAAC,OAAKtE,EAAesE,EAAEC,OAAOH,MAAM,EAC/CI,KAAK,OACLC,KAAK,KACLC,YAAY,0BAGpB1F,cAAC+E,IAAG,CAACC,GAAI,GAAIC,GAAI,EAAE/E,SACfF,cAAC2F,IAAM,CAACvF,UAAU,QAAQoF,KAAK,SAASI,QAAQ,UAAUH,KAAK,KAAIvF,SAAC,6BASxFC,eAACwE,IAAS,CAAAzE,SAAA,CACNF,cAAA,MAAII,UAAU,UAASF,SAClBS,EAAekF,OAAM,WAAA1D,OACLxB,EAAekF,OAAM,aAChC,KAEV7F,cAAC8F,IAAS,CAACC,GAAI,EAAE7F,SACjBF,cAAC8E,IAAG,CAACiB,GAAI,OAAQ3F,UAAU,MAAKF,SAC3BS,EAAeiC,KAAI,SAACF,GAAM,OACvBvC,eAAC6F,IAAI,CAACC,MAAO,CAAEC,MAAO,SAAUhG,SAAA,CAC5BF,cAACgG,IAAKG,IAAG,CAACP,QAAQ,MAAMQ,IAAK1D,EAAOI,MAAOuD,IAAG,GAAAlE,OAAKO,EAAOG,SAC1D1C,eAAC6F,IAAKM,KAAI,CAAApG,SAAA,CACNF,cAACgG,IAAKO,MAAK,CAAArG,SAAEwC,EAAOG,QACpB7C,cAACgG,IAAKQ,KAAI,OAEdrG,eAACsG,IAAS,CAACrG,UAAU,mBAAkBF,SAAA,CACnCC,eAACsG,IAAUC,KAAI,CAAAxG,SAAA,CAAC,cAAYwC,EAAOM,aACnC7C,eAACsG,IAAUC,KAAI,CAAAxG,SAAA,CAAEwC,EAAOO,SAAS,kBAErCjD,cAAC2F,IAAM,CAACvF,UAAU,QAAQoF,KAAK,SAASI,QAAQ,UAAUH,KAAK,KAAKkB,QAAS,kBAAMtC,EAAgB3B,EAAO,EAACxC,SAAC,4BAGzG,WAKnBC,eAACyG,IAAKC,wBAAA,CACFlD,KAAMA,EAAMmD,OAAQjD,GAChBvD,GAAK,IACTmF,KAAK,KACL,kBAAgB,gCAChBsB,UAAQ,EAAA7G,SAAA,CAERF,cAAC4G,IAAM7G,OAAM,CAACiH,aAAW,EAAA9G,SACrBF,cAAC4G,IAAML,MAAK,CAACU,GAAG,gCAA+B/G,SAC1CwC,EAAOG,UAGhB1C,eAACyG,IAAMN,KAAI,CAAApG,SAAA,CACPF,cAAA,MAAAE,SAAI,YAGJF,cAAA,OAAAE,SAAMwC,EAAOK,UACb/C,cAAA,MAAAE,SAAI,UACCiE,EAAYvB,KAAI,SAACuB,GAAW,OACzBnE,cAAA,MAAIwF,KAAK,IAAGtF,SAAyBiE,EAAY+C,MAA/B/C,EAAY+C,KAA6B,OAGvElH,cAAC4G,IAAMO,OAAM,CAAAjH,SACTF,cAAC2F,IAAM,CAACgB,QAAS9C,EAAY3D,SAAC,kBAKlD,EC5HeiH,MAnBf,WACI,OACIhH,eAAA,UAAAD,SAAA,CACIF,cAAA,QAAMoH,IAAI,aAAaC,KAAK,gFAC5BlH,eAAA,MAAIC,UAAU,WAAUF,SAAA,CACpBF,cAAA,MAAAE,SACIF,cAAA,KAAGqH,KAAK,gCAA+BnH,SAACF,cAAA,KAAGI,UAAU,2BAEzDJ,cAAA,MAAAE,SACIF,cAAA,KAAGqH,KAAK,oDAAmDnH,SAACF,cAAA,KAAGI,UAAU,oCAE7EJ,cAAA,MAAAE,SACIF,cAAA,KAAGqH,KAAK,uDAAsDnH,SAACF,cAAA,KAAGI,UAAU,wCAKhG,EC+FekH,EA/GO,SAAChH,GAEnB,IAAAC,EAA0CC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAA/CgH,EAAa9G,EAAA,GAAE+G,EAAgB/G,EAAA,GAEhCgH,EAAS,eAAAvG,EAAAC,YAAAC,cAAAC,MAAG,SAAAC,EAAOgE,GAAC,IAAA9D,EAAAC,EAAAiB,EAAAf,EAAA,OAAAP,cAAAQ,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACCG,MAAM,0HAAyH,OAAxI,IAARV,EAAQK,EAAAO,MAEAG,GAAG,CAADV,EAAAE,KAAA,cACN,IAAIS,MAAM,yBAAyB,KAAD,SAAAX,EAAAE,KAAA,EAGtBP,EAASiB,OAAO,KAAD,EAA/BhB,EAAOI,EAAAO,KACbC,QAAQC,IAAIb,GACNiB,EAASjB,EAAQA,QACvBY,QAAQC,IAAII,GAENf,EAAae,EAAOE,KAAI,SAACF,GAAM,MAAM,CACvCG,MAAOH,EAAOG,MACdC,MAAOJ,EAAOI,MACdC,QAASL,EAAOK,QAChBC,UAAWN,EAAOM,UAClBC,SAAUP,EAAOO,SACjBC,qBAAsBR,EAAOQ,qBAChC,IAEDsE,EAAiB7F,GAAY,yBAAAE,EAAAwB,OAAA,GAAA/B,EAAA,KAChC,gBAtBcgC,GAAA,OAAApC,EAAAqC,MAAA,KAAAC,UAAA,KAwBfkE,qBAAU,WACND,GACJ,GAAG,IAGH,IAAA5G,EAAwBL,oBAAS,GAAMM,EAAAJ,YAAAG,EAAA,GAAhC8C,EAAI7C,EAAA,GAAE8C,EAAO9C,EAAA,GACd+C,EAAc,WAAH,OAASD,GAAQ,EAAO,EAGzCH,EAA4BjD,mBAAS,IAAGkD,EAAAhD,YAAA+C,EAAA,GAAjCf,EAAMgB,EAAA,GAAEM,EAASN,EAAA,GACxBI,EAAsCtD,mBAAS,IAAGuD,EAAArD,YAAAoD,EAAA,GAA3CK,EAAWJ,EAAA,GAAEK,EAAcL,EAAA,GAE5BM,EAAkB,SAAC3B,GACrBL,QAAQC,IAAII,GACZ,IAAM4B,EAAa5B,EACnBL,QAAQC,IAAIgC,GACZ,IAAMC,EAAkBD,EAAWpB,qBAAqB,GAAGsB,MAC3DnC,QAAQC,IAAIiC,GAEZP,EAAUM,GACVF,EAAeG,GAbMX,GAAQ,EAgBjC,EAEA,OACIzD,eAAAF,WAAA,CAAAC,SAAA,CACIC,eAACwE,IAAS,CAAAzE,SAAA,CACNF,cAAA,MAAII,UAAU,YAAWF,SAAC,qBAG1BF,cAAC8F,IAAS,CAACC,GAAI,EAAE7F,SACbF,cAAC8E,IAAG,CAACiB,GAAI,OAAQ3F,UAAU,MAAKF,SAC3BqH,EAAc3E,KAAI,SAACF,GAAM,OACtBvC,eAAC6F,IAAI,CAACC,MAAO,CAAEC,MAAO,SAAUhG,SAAA,CAC5BF,cAACgG,IAAKG,IAAG,CAACP,QAAQ,MAAMQ,IAAK1D,EAAOI,MAAOuD,IAAG,GAAAlE,OAAKO,EAAOG,SAC1D1C,eAAC6F,IAAKM,KAAI,CAAApG,SAAA,CACNF,cAACgG,IAAKO,MAAK,CAAArG,SAAEwC,EAAOG,QACpB7C,cAACgG,IAAKQ,KAAI,OAEdrG,eAACsG,IAAS,CAACrG,UAAU,mBAAkBF,SAAA,CACnCC,eAACsG,IAAUC,KAAI,CAAAxG,SAAA,CAAC,cAAYwC,EAAOM,aACnC7C,eAACsG,IAAUC,KAAI,CAAAxG,SAAA,CAAEwC,EAAOO,SAAS,kBAErCjD,cAAC2F,IAAM,CAACvF,UAAU,QAAQoF,KAAK,SAASI,QAAQ,UAAUH,KAAK,KAAKkB,QAAS,kBAAMtC,EAAgB3B,EAAO,EAACxC,SAAC,4BAGzG,WAKvBF,cAAA,OAAKI,UAAU,aAAYF,SAACF,cAAC2F,IAAM,CAACgB,QAAS,kBAAMc,GAAW,EAACvH,SAAC,gBAChEC,eAACyG,IAAKC,wBAAA,CACFlD,KAAMA,EAAMmD,OAAQjD,GAChBvD,GAAK,IACTmF,KAAK,KACL,kBAAgB,gCAChBsB,UAAQ,EAAA7G,SAAA,CAERF,cAAC4G,IAAM7G,OAAM,CAACiH,aAAW,EAAA9G,SACrBF,cAAC4G,IAAML,MAAK,CAACU,GAAG,gCAA+B/G,SAC1CwC,EAAOG,UAGhB1C,eAACyG,IAAMN,KAAI,CAAApG,SAAA,CACPF,cAAA,MAAAE,SAAI,YAGJF,cAAA,OAAAE,SAAMwC,EAAOK,UACb/C,cAAA,MAAAE,SAAI,UACCiE,EAAYvB,KAAI,SAACuB,GAAW,OACzBnE,cAAA,MAAIwF,KAAK,IAAGtF,SAAyBiE,EAAY+C,MAA/B/C,EAAY+C,KAA6B,OAGvElH,cAAC4G,IAAMO,OAAM,CAAAjH,SACTF,cAAC2F,IAAM,CAACgB,QAAS9C,EAAY3D,SAAC,kBAKlD,EC7FeyH,MAXf,WACE,OACExH,eAAAF,WAAA,CAAAC,SAAA,CACEF,cAACD,EAAM,IACPC,cAACK,EAAS,IACVL,cAACsH,EAAa,IACdtH,cAACmH,EAAM,MAGb,ECXAS,IAASC,OACP7H,cAAC8H,IAAMC,WAAU,CAAA7H,SACfF,cAAC2H,EAAG,MAENK,SAASC,eAAe,Q","file":"static/js/main.c5c93eaf.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Header = () => {\r\n    return (\r\n        <>\r\n            <header>\r\n                <h1 className=\"header\">\r\n                    Foodies<span>Recipe Database</span>\r\n                </h1>\r\n            </header>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Header;","import React, { useState } from \"react\";\r\nimport { Jumbotron, Container, Col, Form, Button, Card, ListGroup, CardGroup, Modal, Row } from 'react-bootstrap';\r\n\r\nconst SearchBar = (props) => {\r\n    const [SearchedRecipe, setSearchRecipe] = useState([]);\r\n    const [searchedInput, setSearchInput] = useState('');\r\n\r\n    const handleFormSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        if (!searchedInput) {\r\n            return false;\r\n        }\r\n\r\n        try {\r\n            const response = await fetch(`https://api.spoonacular.com/recipes/complexSearch?apiKey=f45007eefd874c71bd0a103aa764db2d&query=${searchedInput}&number=20&addRecipeInformation=true`)\r\n            console.log(response)\r\n\r\n            if (!response.ok) {\r\n                throw new Error('something went wrong!');\r\n            }\r\n\r\n            const recipes = await response.json();\r\n            console.log(recipes);\r\n            const recipe = recipes.results;\r\n\r\n            const recipeData = recipe.map((recipe) => ({\r\n                title: recipe.title,\r\n                image: recipe.image,\r\n                summary: recipe.summary,\r\n                dishTypes: recipe.dishTypes,\r\n                servings: recipe.servings,\r\n                analyzedInstructions: recipe.analyzedInstructions\r\n            }))\r\n\r\n            setSearchRecipe(recipeData)\r\n            setSearchInput('');\r\n\r\n        } catch (err) {\r\n            console.error(err);\r\n        }\r\n    }\r\n\r\n    //handles detail model\r\n    const [show, setShow] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    const [recipe, setRecipe] = useState([])\r\n    const [recipeSteps, setRecipeSteps] = useState([])\r\n\r\n    const showRecipeSteps = (recipe) => {\r\n        console.log(recipe)\r\n        const postRecipe = recipe\r\n        console.log(postRecipe)\r\n        const postRecipeSteps = postRecipe.analyzedInstructions[0].steps;\r\n        console.log(postRecipeSteps)\r\n\r\n        setRecipe(postRecipe)\r\n        setRecipeSteps(postRecipeSteps)\r\n\r\n        handleShow()\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Jumbotron fluid className='text-light'>\r\n                <Container>\r\n                    <Form onSubmit={handleFormSubmit}>\r\n                        <Form.Row>\r\n                            <Col xs={12} md={8}>\r\n                                <Form.Control\r\n                                    name='searchInput'\r\n                                    value={searchedInput}\r\n                                    onChange={(e) => setSearchInput(e.target.value)}\r\n                                    type='text'\r\n                                    size='lg'\r\n                                    placeholder='Search for a recipe'\r\n                                />\r\n                            </Col>\r\n                            <Col xs={12} md={3}>\r\n                                <Button className='btn-2' type='submit' variant=\"success\" size='lg'>\r\n                                    Submit Search\r\n                                </Button>\r\n                            </Col>\r\n                        </Form.Row>\r\n                    </Form>\r\n                </Container>\r\n            </Jumbotron>\r\n\r\n            <Container>\r\n                <h2 className='viewing'>\r\n                    {SearchedRecipe.length\r\n                        ? `Viewing ${SearchedRecipe.length} results:`\r\n                        : ''}\r\n                </h2>\r\n                <CardGroup lg={8}>\r\n                <Row lg={'auto'} className=\"g-4\">\r\n                    {SearchedRecipe.map((recipe) => (\r\n                        <Card style={{ width: '18rem' }}>\r\n                            <Card.Img variant=\"top\" src={recipe.image} alt={`${recipe.title}`} />\r\n                            <Card.Body>\r\n                                <Card.Title>{recipe.title}</Card.Title>\r\n                                <Card.Text></Card.Text>\r\n                            </Card.Body>\r\n                            <ListGroup className=\"list-group-flush\">\r\n                                <ListGroup.Item>Dish type- {recipe.dishTypes}</ListGroup.Item>\r\n                                <ListGroup.Item>{recipe.servings} servings</ListGroup.Item>\r\n                            </ListGroup>\r\n                            <Button className='btn-2' type='submit' variant=\"success\" size='lg' onClick={() => showRecipeSteps(recipe)}>\r\n                                Crafting Instructions\r\n                            </Button>\r\n                        </Card>\r\n                    ))}\r\n                    </Row>\r\n                </CardGroup>\r\n            </Container>\r\n            <Modal\r\n                show={show} onHide={handleClose}\r\n                {...props}\r\n                size=\"lg\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                        {recipe.title}\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <h4>\r\n                        Summary\r\n                    </h4>\r\n                    <div>{recipe.summary}</div>\r\n                    <h4>Steps</h4>\r\n                        {recipeSteps.map((recipeSteps) => (\r\n                            <li type=\"1\" key={recipeSteps.step}>{recipeSteps.step}</li>\r\n                        ))}\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button onClick={handleClose}>Close</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SearchBar","import React from 'react';\r\n\r\nfunction Footer () {\r\n    return (\r\n        <footer>\r\n            <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.4.0/css/font-awesome.min.css\"></link>\r\n            <ul className='flex-row'>\r\n                <li>\r\n                    <a href='https://github.com/chazgraham'><i className=\"fa fa-github fa-4x\"></i></a>\r\n                </li>\r\n                <li>\r\n                    <a href='https://www.linkedin.com/in/chaz-graham-a95a43258'><i className=\"fa fa-linkedin-square fa-4x\"></i></a>\r\n                </li>\r\n                <li>\r\n                    <a href='https://stackoverflow.com/users/19429367/chaz-graham'><i className=\"fa fa-stack-overflow fa-4x\"></i></a>\r\n                </li>\r\n            </ul>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React, { useState, useEffect } from \"react\";\r\nimport { Container, Button, Card, ListGroup, CardGroup, Modal, Row } from 'react-bootstrap';\r\n\r\nconst RandomRecipes = (props) => {\r\n\r\n    const [randomRecipes, setRandomRecipes] = useState([])\r\n\r\n    const getRandom = async (e) => {\r\n        const response = await fetch(`https://api.spoonacular.com/recipes/random?apiKey=f45007eefd874c71bd0a103aa764db2d&&number=4&addRecipeInformation=true`)\r\n\r\n        if (!response.ok) {\r\n            throw new Error('something went wrong!');\r\n        }\r\n\r\n        const recipes = await response.json();\r\n        console.log(recipes);\r\n        const recipe = recipes.recipes;\r\n        console.log(recipe)\r\n\r\n        const recipeData = recipe.map((recipe) => ({\r\n            title: recipe.title,\r\n            image: recipe.image,\r\n            summary: recipe.summary,\r\n            dishTypes: recipe.dishTypes,\r\n            servings: recipe.servings,\r\n            analyzedInstructions: recipe.analyzedInstructions\r\n        }))\r\n\r\n        setRandomRecipes(recipeData);\r\n    }\r\n\r\n    useEffect(() => {\r\n        getRandom()\r\n    }, [])\r\n\r\n    //handles detail model\r\n    const [show, setShow] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    const [recipe, setRecipe] = useState([])\r\n    const [recipeSteps, setRecipeSteps] = useState([])\r\n\r\n    const showRecipeSteps = (recipe) => {\r\n        console.log(recipe)\r\n        const postRecipe = recipe\r\n        console.log(postRecipe)\r\n        const postRecipeSteps = postRecipe.analyzedInstructions[0].steps;\r\n        console.log(postRecipeSteps)\r\n\r\n        setRecipe(postRecipe)\r\n        setRecipeSteps(postRecipeSteps)\r\n\r\n        handleShow()\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Container>\r\n                <h2 className='random_h2'>\r\n                    Need some Ideas?\r\n                </h2>\r\n                <CardGroup lg={8}>\r\n                    <Row lg={'auto'} className=\"g-4\">\r\n                        {randomRecipes.map((recipe) => (\r\n                            <Card style={{ width: '16rem' }}>\r\n                                <Card.Img variant=\"top\" src={recipe.image} alt={`${recipe.title}`} />\r\n                                <Card.Body>\r\n                                    <Card.Title>{recipe.title}</Card.Title>\r\n                                    <Card.Text></Card.Text>\r\n                                </Card.Body>\r\n                                <ListGroup className=\"list-group-flush\">\r\n                                    <ListGroup.Item>Dish type- {recipe.dishTypes}</ListGroup.Item>\r\n                                    <ListGroup.Item>{recipe.servings} servings</ListGroup.Item>\r\n                                </ListGroup>\r\n                                <Button className='btn-2' type='submit' variant=\"success\" size='lg' onClick={() => showRecipeSteps(recipe)}>\r\n                                    Crafting Instructions\r\n                                </Button>\r\n                            </Card>\r\n                        ))}\r\n                    </Row>\r\n                </CardGroup>\r\n            </Container>\r\n            <div className=\"random_btn\"><Button onClick={() => getRandom()}>Randomize</Button></div>\r\n            <Modal\r\n                show={show} onHide={handleClose}\r\n                {...props}\r\n                size=\"lg\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                        {recipe.title}\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <h4>\r\n                        Summary\r\n                    </h4>\r\n                    <div>{recipe.summary}</div>\r\n                    <h4>Steps</h4>\r\n                        {recipeSteps.map((recipeSteps) => (\r\n                            <li type=\"1\" key={recipeSteps.step}>{recipeSteps.step}</li>\r\n                        ))}\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button onClick={handleClose}>Close</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default RandomRecipes;","import React from 'react';\nimport './App.css';\n\nimport Header from './components/Header';\nimport SearchBar from './components/SearchBar';\nimport Footer from './components/Footer';\nimport RandomRecipes from './components/Random';\n\nfunction App() {\n  return (\n    <>\n      <Header />\n      <SearchBar />\n      <RandomRecipes />\n      <Footer />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}